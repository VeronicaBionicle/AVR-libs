
AVRASM ver. 2.1.30  D:\Студенческое\Системы управления преобразователями\code\Debug\List\invertor_pwm.asm Tue Mar 17 20:03:22 2020

D:\Студенческое\Системы управления преобразователями\code\Debug\List\invertor_pwm.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Студенческое\Системы управления преобразователями\code\Debug\List\invertor_pwm.asm(1091): warning: Register r3 already defined by the .DEF directive
D:\Студенческое\Системы управления преобразователями\code\Debug\List\invertor_pwm.asm(1092): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 7,680000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _polarity=R4
                 	.DEF _B_polarity=R3
                 	.DEF _step=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01a6 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 024b 	JMP  _timer1_compa_isr
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _sinus_table:
000034 0000
000035 0000
000036 5c29
000037 3c8f      	.DB  0x0,0x0,0x0,0x0,0x29,0x5C,0x8F,0x3C
000038 5c29
000039 3d0f
00003a fdf4
00003b 3d54      	.DB  0x29,0x5C,0xF,0x3D,0xF4,0xFD,0x54,0x3D
00003c f34d
00003d 3d8e
00003e 2d0e
00003f 3db2      	.DB  0x4D,0xF3,0x8E,0x3D,0xE,0x2D,0xB2,0x3D
000040 0a3d
000041 3dd7
000042 db23
000043 3df9      	.DB  0x3D,0xA,0xD7,0x3D,0x23,0xDB,0xF9,0x3D
000044 5604
000045 3e0e
000046 be77
000047 3e1f      	.DB  0x4,0x56,0xE,0x3E,0x77,0xBE,0x1F,0x3E
000048 2d0e
000049 3e32
00004a 9581
00004b 3e43      	.DB  0xE,0x2D,0x32,0x3E,0x81,0x95,0x43,0x3E
00004c fdf4
00004d 3e54
00004e 6666
00004f 3e66      	.DB  0xF4,0xFD,0x54,0x3E,0x66,0x66,0x66,0x3E
000050 ced9
000051 3e77
000052 9ba6
000053 3e84      	.DB  0xD9,0xCE,0x77,0x3E,0xA6,0x9B,0x84,0x3E
000054 4fdf
000055 3e8d
000056 8106
000057 3e95      	.DB  0xDF,0x4F,0x8D,0x3E,0x6,0x81,0x95,0x3E
000058 353f
000059 3e9e
00005a e979
00005b 3ea6      	.DB  0x3F,0x35,0x9E,0x3E,0x79,0xE9,0xA6,0x3E
00005c 1aa0
00005d 3eaf
00005e 4bc7
00005f 3eb7      	.DB  0xA0,0x1A,0xAF,0x3E,0xC7,0x4B,0xB7,0x3E
000060 0000
000061 3ec0
000062 3127
000063 3ec8      	.DB  0x0,0x0,0xC0,0x3E,0x27,0x31,0xC8,0x3E
000064 624e
000065 3ed0
000066 9375
000067 3ed8      	.DB  0x4E,0x62,0xD0,0x3E,0x75,0x93,0xD8,0x3E
000068 4189
000069 3ee0
00006a 72b0
00006b 3ee8      	.DB  0x89,0x41,0xE0,0x3E,0xB0,0x72,0xE8,0x3E
00006c 20c5
00006d 3ef0
00006e 51ec
00006f 3ef8      	.DB  0xC5,0x20,0xF0,0x3E,0xEC,0x51,0xF8,0x3E
000070 0000
000071 3f00
000072 d70a
000073 3f03      	.DB  0x0,0x0,0x0,0x3F,0xA,0xD7,0x3,0x3F
000074 ae14
000075 3f07
000076 851f
000077 3f0b      	.DB  0x14,0xAE,0x7,0x3F,0x1F,0x85,0xB,0x3F
000078 1aa0
000079 3f0f
00007a f1aa
00007b 3f12      	.DB  0xA0,0x1A,0xF,0x3F,0xAA,0xF1,0x12,0x3F
00007c 872b
00007d 3f16
00007e 1cac
00007f 3f1a      	.DB  0x2B,0x87,0x16,0x3F,0xAC,0x1C,0x1A,0x3F
000080 b22d
000081 3f1d
000082 0625
000083 3f21      	.DB  0x2D,0xB2,0x1D,0x3F,0x25,0x6,0x21,0x3F
000084 9ba6
000085 3f24
000086 ef9e
000087 3f27      	.DB  0xA6,0x9B,0x24,0x3F,0x9E,0xEF,0x27,0x3F
000088 4396
000089 3f2b
00008a 978d
00008b 3f2e      	.DB  0x96,0x43,0x2B,0x3F,0x8D,0x97,0x2E,0x3F
00008c eb85
00008d 3f31
00008e fdf4
00008f 3f34      	.DB  0x85,0xEB,0x31,0x3F,0xF4,0xFD,0x34,0x3F
000090 1062
000091 3f38
000092 22d1
000093 3f3b      	.DB  0x62,0x10,0x38,0x3F,0xD1,0x22,0x3B,0x3F
000094 353f
000095 3f3e
000096 47ae
000097 3f41      	.DB  0x3F,0x35,0x3E,0x3F,0xAE,0x47,0x41,0x3F
000098 1893
000099 3f44
00009a e979
00009b 3f46      	.DB  0x93,0x18,0x44,0x3F,0x79,0xE9,0x46,0x3F
00009c ba5e
00009d 3f49
00009e 8b44
00009f 3f4c      	.DB  0x5E,0xBA,0x49,0x3F,0x44,0x8B,0x4C,0x3F
0000a0 1aa0
0000a1 3f4f
0000a2 a9fc
0000a3 3f51      	.DB  0xA0,0x1A,0x4F,0x3F,0xFC,0xA9,0x51,0x3F
0000a4 3958
0000a5 3f54
0000a6 c8b4
0000a7 3f56      	.DB  0x58,0x39,0x54,0x3F,0xB4,0xC8,0x56,0x3F
0000a8 1687
0000a9 3f59
0000aa 645a
0000ab 3f5b      	.DB  0x87,0x16,0x59,0x3F,0x5A,0x64,0x5B,0x3F
0000ac b22d
0000ad 3f5d
0000ae 0000
0000af 3f60      	.DB  0x2D,0xB2,0x5D,0x3F,0x0,0x0,0x60,0x3F
0000b0 0c4a
0000b1 3f62
0000b2 1893
0000b3 3f64      	.DB  0x4A,0xC,0x62,0x3F,0x93,0x18,0x64,0x3F
0000b4 24dd
0000b5 3f66
0000b6 ef9e
0000b7 3f67      	.DB  0xDD,0x24,0x66,0x3F,0x9E,0xEF,0x67,0x3F
0000b8 fbe7
0000b9 3f69
0000ba c6a8
0000bb 3f6b      	.DB  0xE7,0xFB,0x69,0x3F,0xA8,0xC6,0x6B,0x3F
0000bc 4fdf
0000bd 3f6d
0000be 1aa0
0000bf 3f6f      	.DB  0xDF,0x4F,0x6D,0x3F,0xA0,0x1A,0x6F,0x3F
0000c0 a3d7
0000c1 3f70
0000c2 2d0e
0000c3 3f72      	.DB  0xD7,0xA3,0x70,0x3F,0xE,0x2D,0x72,0x3F
0000c4 74bc
0000c5 3f73
0000c6 bc6a
0000c7 3f74      	.DB  0xBC,0x74,0x73,0x3F,0x6A,0xBC,0x74,0x3F
0000c8 0419
0000c9 3f76
0000ca 4bc7
0000cb 3f77      	.DB  0x19,0x4,0x76,0x3F,0xC7,0x4B,0x77,0x3F
0000cc 51ec
0000cd 3f78
0000ce 5810
0000cf 3f79      	.DB  0xEC,0x51,0x78,0x3F,0x10,0x58,0x79,0x3F
0000d0 5e35
0000d1 3f7a
0000d2 645a
0000d3 3f7b      	.DB  0x35,0x5E,0x7A,0x3F,0x5A,0x64,0x7B,0x3F
0000d4 28f6
0000d5 3f7c
0000d6 ed91
0000d7 3f7c      	.DB  0xF6,0x28,0x7C,0x3F,0x91,0xED,0x7C,0x3F
0000d8 70a4
0000d9 3f7d
0000da 353f
0000db 3f7e      	.DB  0xA4,0x70,0x7D,0x3F,0x3F,0x35,0x7E,0x3F
0000dc b852
0000dd 3f7e
0000de f9db
0000df 3f7e      	.DB  0x52,0xB8,0x7E,0x3F,0xDB,0xF9,0x7E,0x3F
0000e0 7cee
0000e1 3f7f
0000e2 be77
0000e3 3f7f      	.DB  0xEE,0x7C,0x7F,0x3F,0x77,0xBE,0x7F,0x3F
0000e4 be77
0000e5 3f7f
0000e6 0000
0000e7 3f80      	.DB  0x77,0xBE,0x7F,0x3F,0x0,0x0,0x80,0x3F
0000e8 0000
0000e9 3f80
0000ea 0000
0000eb 3f80      	.DB  0x0,0x0,0x80,0x3F,0x0,0x0,0x80,0x3F
0000ec be77
0000ed 3f7f
0000ee be77
0000ef 3f7f      	.DB  0x77,0xBE,0x7F,0x3F,0x77,0xBE,0x7F,0x3F
0000f0 7cee
0000f1 3f7f
0000f2 f9db
0000f3 3f7e      	.DB  0xEE,0x7C,0x7F,0x3F,0xDB,0xF9,0x7E,0x3F
0000f4 b852
0000f5 3f7e
0000f6 353f
0000f7 3f7e      	.DB  0x52,0xB8,0x7E,0x3F,0x3F,0x35,0x7E,0x3F
0000f8 70a4
0000f9 3f7d
0000fa ed91
0000fb 3f7c      	.DB  0xA4,0x70,0x7D,0x3F,0x91,0xED,0x7C,0x3F
0000fc 28f6
0000fd 3f7c
0000fe 645a
0000ff 3f7b      	.DB  0xF6,0x28,0x7C,0x3F,0x5A,0x64,0x7B,0x3F
000100 5e35
000101 3f7a
000102 5810
000103 3f79      	.DB  0x35,0x5E,0x7A,0x3F,0x10,0x58,0x79,0x3F
000104 51ec
000105 3f78
000106 4bc7
000107 3f77      	.DB  0xEC,0x51,0x78,0x3F,0xC7,0x4B,0x77,0x3F
000108 0419
000109 3f76
00010a bc6a
00010b 3f74      	.DB  0x19,0x4,0x76,0x3F,0x6A,0xBC,0x74,0x3F
00010c 74bc
00010d 3f73
00010e 2d0e
00010f 3f72      	.DB  0xBC,0x74,0x73,0x3F,0xE,0x2D,0x72,0x3F
000110 a3d7
000111 3f70
000112 1aa0
000113 3f6f      	.DB  0xD7,0xA3,0x70,0x3F,0xA0,0x1A,0x6F,0x3F
000114 4fdf
000115 3f6d
000116 c6a8
000117 3f6b      	.DB  0xDF,0x4F,0x6D,0x3F,0xA8,0xC6,0x6B,0x3F
000118 fbe7
000119 3f69
00011a ef9e
00011b 3f67      	.DB  0xE7,0xFB,0x69,0x3F,0x9E,0xEF,0x67,0x3F
00011c 24dd
00011d 3f66
00011e 1893
00011f 3f64      	.DB  0xDD,0x24,0x66,0x3F,0x93,0x18,0x64,0x3F
000120 0c4a
000121 3f62
000122 0000
000123 3f60      	.DB  0x4A,0xC,0x62,0x3F,0x0,0x0,0x60,0x3F
000124 b22d
000125 3f5d
000126 645a
000127 3f5b      	.DB  0x2D,0xB2,0x5D,0x3F,0x5A,0x64,0x5B,0x3F
000128 1687
000129 3f59
00012a c8b4
00012b 3f56      	.DB  0x87,0x16,0x59,0x3F,0xB4,0xC8,0x56,0x3F
00012c 3958
00012d 3f54
00012e a9fc
00012f 3f51      	.DB  0x58,0x39,0x54,0x3F,0xFC,0xA9,0x51,0x3F
000130 1aa0
000131 3f4f
000132 8b44
000133 3f4c      	.DB  0xA0,0x1A,0x4F,0x3F,0x44,0x8B,0x4C,0x3F
000134 ba5e
000135 3f49
000136 e979
000137 3f46      	.DB  0x5E,0xBA,0x49,0x3F,0x79,0xE9,0x46,0x3F
000138 1893
000139 3f44
00013a 47ae
00013b 3f41      	.DB  0x93,0x18,0x44,0x3F,0xAE,0x47,0x41,0x3F
00013c 353f
00013d 3f3e
00013e 22d1
00013f 3f3b      	.DB  0x3F,0x35,0x3E,0x3F,0xD1,0x22,0x3B,0x3F
000140 1062
000141 3f38
000142 fdf4
000143 3f34      	.DB  0x62,0x10,0x38,0x3F,0xF4,0xFD,0x34,0x3F
000144 eb85
000145 3f31
000146 978d
000147 3f2e      	.DB  0x85,0xEB,0x31,0x3F,0x8D,0x97,0x2E,0x3F
000148 4396
000149 3f2b
00014a ef9e
00014b 3f27      	.DB  0x96,0x43,0x2B,0x3F,0x9E,0xEF,0x27,0x3F
00014c 9ba6
00014d 3f24
00014e 0625
00014f 3f21      	.DB  0xA6,0x9B,0x24,0x3F,0x25,0x6,0x21,0x3F
000150 b22d
000151 3f1d
000152 1cac
000153 3f1a      	.DB  0x2D,0xB2,0x1D,0x3F,0xAC,0x1C,0x1A,0x3F
000154 872b
000155 3f16
000156 f1aa
000157 3f12      	.DB  0x2B,0x87,0x16,0x3F,0xAA,0xF1,0x12,0x3F
000158 1aa0
000159 3f0f
00015a 851f
00015b 3f0b      	.DB  0xA0,0x1A,0xF,0x3F,0x1F,0x85,0xB,0x3F
00015c ae14
00015d 3f07
00015e d70a
00015f 3f03      	.DB  0x14,0xAE,0x7,0x3F,0xA,0xD7,0x3,0x3F
000160 0000
000161 3f00
000162 51ec
000163 3ef8      	.DB  0x0,0x0,0x0,0x3F,0xEC,0x51,0xF8,0x3E
000164 20c5
000165 3ef0
000166 72b0
000167 3ee8      	.DB  0xC5,0x20,0xF0,0x3E,0xB0,0x72,0xE8,0x3E
000168 4189
000169 3ee0
00016a 9375
00016b 3ed8      	.DB  0x89,0x41,0xE0,0x3E,0x75,0x93,0xD8,0x3E
00016c 624e
00016d 3ed0
00016e 3127
00016f 3ec8      	.DB  0x4E,0x62,0xD0,0x3E,0x27,0x31,0xC8,0x3E
000170 0000
000171 3ec0
000172 4bc7
000173 3eb7      	.DB  0x0,0x0,0xC0,0x3E,0xC7,0x4B,0xB7,0x3E
000174 1aa0
000175 3eaf
000176 e979
000177 3ea6      	.DB  0xA0,0x1A,0xAF,0x3E,0x79,0xE9,0xA6,0x3E
000178 353f
000179 3e9e
00017a 8106
00017b 3e95      	.DB  0x3F,0x35,0x9E,0x3E,0x6,0x81,0x95,0x3E
00017c 4fdf
00017d 3e8d
00017e 9ba6
00017f 3e84      	.DB  0xDF,0x4F,0x8D,0x3E,0xA6,0x9B,0x84,0x3E
000180 ced9
000181 3e77
000182 6666
000183 3e66      	.DB  0xD9,0xCE,0x77,0x3E,0x66,0x66,0x66,0x3E
000184 fdf4
000185 3e54
000186 9581
000187 3e43      	.DB  0xF4,0xFD,0x54,0x3E,0x81,0x95,0x43,0x3E
000188 2d0e
000189 3e32
00018a be77
00018b 3e1f      	.DB  0xE,0x2D,0x32,0x3E,0x77,0xBE,0x1F,0x3E
00018c 5604
00018d 3e0e
00018e db23
00018f 3df9      	.DB  0x4,0x56,0xE,0x3E,0x23,0xDB,0xF9,0x3D
000190 0a3d
000191 3dd7
000192 2d0e
000193 3db2      	.DB  0x3D,0xA,0xD7,0x3D,0xE,0x2D,0xB2,0x3D
000194 f34d
000195 3d8e
000196 fdf4
000197 3d54      	.DB  0x4D,0xF3,0x8E,0x3D,0xF4,0xFD,0x54,0x3D
000198 5c29
000199 3d0f
00019a 5c29
00019b 3c8f      	.DB  0x29,0x5C,0xF,0x3D,0x29,0x5C,0x8F,0x3C
00019c 0000
00019d 0000
00019e 0000
00019f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
0001a0 0100
0001a1 0000      	.DB  0x0,0x1,0x0,0x0
                 
                 
                 __GLOBAL_INI_TBL:
0001a2 0004      	.DW  0x04
0001a3 0003      	.DW  0x03
0001a4 0340      	.DW  __REG_VARS*2
                 
                 _0xFFFFFFFF:
0001a5 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0001a6 94f8      	CLI
0001a7 27ee      	CLR  R30
0001a8 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001a9 e0f1      	LDI  R31,1
0001aa bff5      	OUT  MCUCR,R31
0001ab bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0001ac e08d      	LDI  R24,(14-2)+1
0001ad e0a2      	LDI  R26,2
0001ae 27bb      	CLR  R27
                 __CLEAR_REG:
0001af 93ed      	ST   X+,R30
0001b0 958a      	DEC  R24
0001b1 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001b2 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001b3 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001b4 e0a0      	LDI  R26,LOW(__SRAM_START)
0001b5 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001b6 93ed      	ST   X+,R30
0001b7 9701      	SBIW R24,1
0001b8 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001b9 e4e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001ba e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001bb 9185      	LPM  R24,Z+
0001bc 9195      	LPM  R25,Z+
0001bd 9700      	SBIW R24,0
0001be f061      	BREQ __GLOBAL_INI_END
0001bf 91a5      	LPM  R26,Z+
0001c0 91b5      	LPM  R27,Z+
0001c1 9005      	LPM  R0,Z+
0001c2 9015      	LPM  R1,Z+
0001c3 01bf      	MOVW R22,R30
0001c4 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001c5 9005      	LPM  R0,Z+
0001c6 920d      	ST   X+,R0
0001c7 9701      	SBIW R24,1
0001c8 f7e1      	BRNE __GLOBAL_INI_LOOP
0001c9 01fb      	MOVW R30,R22
0001ca cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0001cb e0e0      	LDI  R30,__GPIOR0_INIT
0001cc bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001cd efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001ce bfed      	OUT  SPL,R30
0001cf e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001d0 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001d1 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001d2 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001d3 940c 0286 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;
                 ;#define low(x)   ((x) & 0xFF)
                 ;#define high(x)   (((x)>>8) & 0xFF)
                 ;
                 ;//#define FGEN 7680000UL
                 ;#define FGEN 7946000UL
                 ;#define TIMER0_A_PWM (1<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (1<<WGM00)
                 ;#define TIMER0_B_PWM (0<<COM0A1) | (0<<COM0A0) | (1<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (1<<WGM00)
                 ;#define N 181 //points
                 ;#define DEAD_TIME 2
                 ;
                 ;unsigned char polarity = 1;
                 ;unsigned char B_polarity = 0;
                 ;unsigned char step = 0;
                 ;
                 ;unsigned char sinus[N+1];
                 ;
                 ;const float sinus_table[N+1] ={
                 ;0.0, 0.0175, 0.035, 0.052, 0.0698, 0.087, 0.105,
                 ;0.122, 0.139, 0.156, 0.174, 0.191, 0.208,
                 ;0.225, 0.242, 0.259, 0.276, 0.292, 0.309,
                 ;0.326, 0.342, 0.358, 0.375, 0.391, 0.407,
                 ;0.423, 0.438, 0.454, 0.469, 0.485, 0.5,
                 ;0.515, 0.53, 0.545, 0.559, 0.574, 0.588,
                 ;0.602, 0.616, 0.629, 0.643, 0.656, 0.669,
                 ;0.682, 0.695, 0.707, 0.719, 0.731, 0.743,
                 ;0.755, 0.766, 0.777, 0.788, 0.799, 0.809,
                 ;0.819, 0.829, 0.839, 0.848, 0.857, 0.866,
                 ;0.875, 0.883, 0.891, 0.899, 0.906, 0.914,
                 ;0.921, 0.927, 0.934, 0.94, 0.946, 0.951,
                 ;0.956, 0.961, 0.966, 0.97, 0.974, 0.978,
                 ;0.982, 0.985, 0.988, 0.99, 0.993, 0.995,
                 ;0.996, 0.998, 0.999, 0.999, 1.0,  1.0,
                 ;1.0, 0.999, 0.999, 0.998, 0.996,
                 ;0.995, 0.993, 0.99, 0.988, 0.985, 0.982,
                 ;0.978, 0.974, 0.97, 0.966, 0.961, 0.956,
                 ;0.951, 0.946, 0.94, 0.934, 0.927, 0.921,
                 ;0.914, 0.906, 0.899, 0.891, 0.883, 0.875,
                 ;0.866, 0.857, 0.848, 0.839, 0.829, 0.819,
                 ;0.809, 0.799, 0.788, 0.777, 0.766, 0.755,
                 ;0.743, 0.731, 0.719, 0.707, 0.695, 0.682,
                 ;0.669, 0.656, 0.643, 0.629, 0.616, 0.602,
                 ;0.588, 0.574, 0.559, 0.545, 0.53, 0.515,
                 ;0.5, 0.485, 0.469, 0.454, 0.438, 0.423,
                 ;0.407, 0.391, 0.375, 0.358, 0.342, 0.326,
                 ;0.309, 0.292, 0.276, 0.259, 0.242, 0.225,
                 ;0.208, 0.191, 0.174, 0.156, 0.139, 0.122,
                 ;0.105, 0.087, 0.0698, 0.052, 0.035, 0.0175, 0.0};
                 ;
                 ;void stop_timers() {
                 ; 0000 0033 void stop_timers() {
                 
                 	.CSEG
                 _stop_timers:
                 ; .FSTART _stop_timers
                 ; 0000 0034 TCCR0A=0;
0001d5 e0e0      	LDI  R30,LOW(0)
0001d6 bde4      	OUT  0x24,R30
                 ; 0000 0035 TCCR0B=0;
0001d7 bde5      	OUT  0x25,R30
                 ; 0000 0036 TCNT0=0;
0001d8 bde6      	OUT  0x26,R30
                 ; 0000 0037 OCR0A=0;
0001d9 bde7      	OUT  0x27,R30
                 ; 0000 0038 OCR0B=0;
0001da bde8      	OUT  0x28,R30
                 ; 0000 0039 TIMSK1=0;
0001db 93e0 006f 	STS  111,R30
                 ; 0000 003A }
0001dd 9508      	RET
                 ; .FEND
                 ;
                 ;void DC_mode() {
                 ; 0000 003C void DC_mode() {
                 _DC_mode:
                 ; .FSTART _DC_mode
                 ; 0000 003D stop_timers();
0001de dff6      	RCALL _stop_timers
                 ; 0000 003E PORTC=(1<<PORTC1);
0001df e0e2      	LDI  R30,LOW(2)
0001e0 b9e8      	OUT  0x8,R30
                 ; 0000 003F PORTD=(1<<PORTD5);
0001e1 e2e0      	LDI  R30,LOW(32)
0001e2 b9eb      	OUT  0xB,R30
                 ; 0000 0040 }
0001e3 9508      	RET
                 ; .FEND
                 ;
                 ;void sinus_period(unsigned int frequency) {
                 ; 0000 0042 void sinus_period(unsigned int frequency) {
                 _sinus_period:
                 ; .FSTART _sinus_period
                 ; 0000 0043     if (frequency != 0) {
0001e4 93ba      	ST   -Y,R27
0001e5 93aa      	ST   -Y,R26
                 ;	frequency -> Y+0
0001e6 81e8      	LD   R30,Y
0001e7 81f9      	LDD  R31,Y+1
0001e8 9730      	SBIW R30,0
0001e9 f049      	BREQ _0x3
                 ; 0000 0044     OCR1AH = high(FGEN/2/N/frequency);
0001ea d09e      	RCALL SUBOPT_0x0
0001eb 2fef      	MOV  R30,R31
0001ec e0f0      	LDI  R31,0
0001ed 93e0 0089 	STS  137,R30
                 ; 0000 0045     OCR1AL = low(FGEN/2/N/frequency);
0001ef d099      	RCALL SUBOPT_0x0
0001f0 93e0 0088 	STS  136,R30
                 ; 0000 0046     } else {
0001f2 c001      	RJMP _0x4
                 _0x3:
                 ; 0000 0047         DC_mode();
0001f3 dfea      	RCALL _DC_mode
                 ; 0000 0048     }
                 _0x4:
                 ; 0000 0049 }
0001f4 c034      	RJMP _0x2000001
                 ; .FEND
                 ;
                 ;void sinus_amplitude(unsigned char amplitude) {
                 ; 0000 004B void sinus_amplitude(unsigned char amplitude) {
                 _sinus_amplitude:
                 ; .FSTART _sinus_amplitude
                 ; 0000 004C unsigned char i = 0;
                 ; 0000 004D     for (i = 0; i < N; i++) {
0001f5 93aa      	ST   -Y,R26
0001f6 931a      	ST   -Y,R17
                 ;	amplitude -> Y+1
                 ;	i -> R17
0001f7 e010      	LDI  R17,0
0001f8 e010      	LDI  R17,LOW(0)
                 _0x6:
0001f9 3b15      	CPI  R17,181
0001fa f568      	BRSH _0x7
                 ; 0000 004E      sinus[i] = 2.55*amplitude*sinus_table[i];
0001fb 2fe1      	MOV  R30,R17
0001fc e0f0      	LDI  R31,0
0001fd 50e0      	SUBI R30,LOW(-_sinus)
0001fe 4ffd      	SBCI R31,HIGH(-_sinus)
0001ff 93ff      	PUSH R31
000200 93ef      	PUSH R30
000201 81e9      	LDD  R30,Y+1
000202 e0f0      	LDI  R31,0
000203 940e 0386 	CALL __CWD1
000205 940e 02fd 	CALL __CDF1
                +
000207 e3a3     +LDI R26 , LOW ( 0x40233333 )
000208 e3b3     +LDI R27 , HIGH ( 0x40233333 )
000209 e283     +LDI R24 , BYTE3 ( 0x40233333 )
00020a e490     +LDI R25 , BYTE4 ( 0x40233333 )
                 	__GETD2N 0x40233333
00020b 940e 032b 	CALL __MULF12
00020d 937f      	PUSH R23
00020e 936f      	PUSH R22
00020f 93ff      	PUSH R31
000210 93ef      	PUSH R30
000211 2fe1      	MOV  R30,R17
000212 e6a8      	LDI  R26,LOW(_sinus_table*2)
000213 e0b0      	LDI  R27,HIGH(_sinus_table*2)
000214 e0f0      	LDI  R31,0
000215 940e 0381 	CALL __LSLW2
000217 0fea      	ADD  R30,R26
000218 1ffb      	ADC  R31,R27
000219 940e 039e 	CALL __GETD1PF
00021b 91af      	POP  R26
00021c 91bf      	POP  R27
00021d 918f      	POP  R24
00021e 919f      	POP  R25
00021f 940e 032b 	CALL __MULF12
000221 91af      	POP  R26
000222 91bf      	POP  R27
000223 940e 02c4 	CALL __CFD1U
000225 93ec      	ST   X,R30
                 ; 0000 004F     }
000226 5f1f      	SUBI R17,-1
000227 cfd1      	RJMP _0x6
                 _0x7:
                 ; 0000 0050 }
000228 8118      	LDD  R17,Y+0
                 _0x2000001:
000229 9622      	ADIW R28,2
00022a 9508      	RET
                 ; .FEND
                 ;
                 ;void start_PWM(unsigned int frequency, unsigned int amplitude) {
                 ; 0000 0052 void start_PWM(unsigned int frequency, unsigned int amplitude) {
                 _start_PWM:
                 ; .FSTART _start_PWM
                 ; 0000 0053 // Timer/Counter 0 initialization
                 ; 0000 0054 TCCR0A=TIMER0_A_PWM;
00022b 93ba      	ST   -Y,R27
00022c 93aa      	ST   -Y,R26
                 ;	frequency -> Y+2
                 ;	amplitude -> Y+0
00022d e8e1      	LDI  R30,LOW(129)
00022e bde4      	OUT  0x24,R30
                 ; 0000 0055 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
00022f e0e1      	LDI  R30,LOW(1)
000230 bde5      	OUT  0x25,R30
                 ; 0000 0056 TCNT0=0;
000231 e0e0      	LDI  R30,LOW(0)
000232 bde6      	OUT  0x26,R30
                 ; 0000 0057 // Timer/Counter 1 initialization
                 ; 0000 0058 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000233 93e0 0080 	STS  128,R30
                 ; 0000 0059 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
000235 e0e9      	LDI  R30,LOW(9)
000236 93e0 0081 	STS  129,R30
                 ; 0000 005A TCNT1H=0;
000238 e0e0      	LDI  R30,LOW(0)
000239 93e0 0085 	STS  133,R30
                 ; 0000 005B TCNT1L=0;
00023b 93e0 0084 	STS  132,R30
                 ; 0000 005C ICR1H=0;
00023d 93e0 0087 	STS  135,R30
                 ; 0000 005D ICR1L=0;
00023f 93e0 0086 	STS  134,R30
                 ; 0000 005E // Timer/Counter 1 Interrupt(s) initialization
                 ; 0000 005F TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (1<<OCIE1A) | (0<<TOIE1);
000241 e0e2      	LDI  R30,LOW(2)
000242 93e0 006f 	STS  111,R30
                 ; 0000 0060 sinus_period(frequency);
000244 81aa      	LDD  R26,Y+2
000245 81bb      	LDD  R27,Y+2+1
000246 df9d      	RCALL _sinus_period
                 ; 0000 0061 sinus_amplitude(amplitude);
000247 81a8      	LD   R26,Y
000248 dfac      	RCALL _sinus_amplitude
                 ; 0000 0062 }
000249 9624      	ADIW R28,4
00024a 9508      	RET
                 ; .FEND
                 ;
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 0065 {
                 _timer1_compa_isr:
                 ; .FSTART _timer1_compa_isr
00024b 93ea      	ST   -Y,R30
00024c 93fa      	ST   -Y,R31
00024d b7ef      	IN   R30,SREG
00024e 93ea      	ST   -Y,R30
                 ; 0000 0066    if (step > N) {polarity ^= 1; step = 0;};
00024f ebe5      	LDI  R30,LOW(181)
000250 15e6      	CP   R30,R6
000251 f418      	BRSH _0x8
000252 e0e1      	LDI  R30,LOW(1)
000253 264e      	EOR  R4,R30
000254 2466      	CLR  R6
                 _0x8:
                 ; 0000 0067    if (step == DEAD_TIME || step == N-DEAD_TIME) {B_polarity ^= 1;};
000255 e0e2      	LDI  R30,LOW(2)
000256 15e6      	CP   R30,R6
000257 f019      	BREQ _0xA
000258 ebe3      	LDI  R30,LOW(179)
000259 15e6      	CP   R30,R6
00025a f411      	BRNE _0x9
                 _0xA:
00025b e0e1      	LDI  R30,LOW(1)
00025c 263e      	EOR  R3,R30
                 _0x9:
                 ; 0000 0068    step++;
00025d 9463      	INC  R6
                 ; 0000 0069    if (polarity == 1) {
00025e e0e1      	LDI  R30,LOW(1)
00025f 15e4      	CP   R30,R4
000260 f429      	BRNE _0xC
                 ; 0000 006A     TCCR0A = TIMER0_A_PWM;
000261 e8e1      	LDI  R30,LOW(129)
000262 d02d      	RCALL SUBOPT_0x1
                 ; 0000 006B     OCR0A = sinus[step];
000263 bde7      	OUT  0x27,R30
                 ; 0000 006C     PORTC = (B_polarity << PORTC0);
000264 b838      	OUT  0x8,R3
                 ; 0000 006D    } else {
000265 c006      	RJMP _0xD
                 _0xC:
                 ; 0000 006E     TCCR0A=TIMER0_B_PWM;
000266 e2e1      	LDI  R30,LOW(33)
000267 d028      	RCALL SUBOPT_0x1
                 ; 0000 006F     OCR0B = sinus[step];
000268 bde8      	OUT  0x28,R30
                 ; 0000 0070     PORTC = (B_polarity << PORTC1);
000269 2de3      	MOV  R30,R3
00026a 0fee      	LSL  R30
00026b b9e8      	OUT  0x8,R30
                 ; 0000 0071    }
                 _0xD:
                 ; 0000 0072 }
00026c 91e9      	LD   R30,Y+
00026d bfef      	OUT  SREG,R30
00026e 91f9      	LD   R31,Y+
00026f 91e9      	LD   R30,Y+
000270 9518      	RETI
                 ; .FEND
                 ;
                 ;void setup() {
                 ; 0000 0074 void setup() {
                 _setup:
                 ; .FSTART _setup
                 ; 0000 0075 // Crystal Oscillator division factor: 1
                 ; 0000 0076 #pragma optsize-
                 ; 0000 0077 CLKPR=(1<<CLKPCE);
000271 e8e0      	LDI  R30,LOW(128)
000272 93e0 0061 	STS  97,R30
                 ; 0000 0078 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
000274 e0e0      	LDI  R30,LOW(0)
000275 93e0 0061 	STS  97,R30
                 ; 0000 0079 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 007A #pragma optsize+
                 ; 0000 007B #endif
                 ; 0000 007C ACSR=(1<<ACD);
000277 e8e0      	LDI  R30,LOW(128)
000278 bfe0      	OUT  0x30,R30
                 ; 0000 007D // Ports init
                 ; 0000 007E DDRC=(1<<DDC1) | (1<<DDC0);
000279 e0e3      	LDI  R30,LOW(3)
00027a b9e7      	OUT  0x7,R30
                 ; 0000 007F DDRD=(1<<DDD6) | (1<<DDD5);
00027b e6e0      	LDI  R30,LOW(96)
00027c b9ea      	OUT  0xA,R30
                 ; 0000 0080 
                 ; 0000 0081 start_PWM(100, 100);
00027d e6e4      	LDI  R30,LOW(100)
00027e e0f0      	LDI  R31,HIGH(100)
00027f 93fa      	ST   -Y,R31
000280 93ea      	ST   -Y,R30
000281 e6a4      	LDI  R26,LOW(100)
000282 e0b0      	LDI  R27,0
000283 dfa7      	RCALL _start_PWM
                 ; 0000 0082 
                 ; 0000 0083 #asm("sei")
000284 9478      	sei
                 ; 0000 0084 }
000285 9508      	RET
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0087 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0088  setup();
000286 dfea      	RCALL _setup
                 ; 0000 0089 while (1)
                 _0xE:
                 ; 0000 008A       {
                 ; 0000 008B       }
000287 cfff      	RJMP _0xE
                 ; 0000 008C }
                 _0x11:
000288 cfff      	RJMP _0x11
                 ; .FEND
                 
                 	.DSEG
                 _sinus:
000300           	.BYTE 0xB6
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000289 81e8      	LD   R30,Y
00028a 81f9      	LDD  R31,Y+1
00028b ebae      	LDI  R26,LOW(21950)
00028c e5b5      	LDI  R27,HIGH(21950)
00028d 940e 038b 	CALL __DIVW21U
00028f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000290 bde4      	OUT  0x24,R30
000291 2de6      	MOV  R30,R6
000292 e0f0      	LDI  R31,0
000293 50e0      	SUBI R30,LOW(-_sinus)
000294 4ffd      	SBCI R31,HIGH(-_sinus)
000295 81e0      	LD   R30,Z
000296 9508      	RET
                 
                 
                 	.CSEG
                 __ROUND_REPACK:
000297 2355      	TST  R21
000298 f442      	BRPL __REPACK
000299 3850      	CPI  R21,0x80
00029a f411      	BRNE __ROUND_REPACK0
00029b ffe0      	SBRS R30,0
00029c c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00029d 9631      	ADIW R30,1
00029e 1f69      	ADC  R22,R25
00029f 1f79      	ADC  R23,R25
0002a0 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0002a1 e850      	LDI  R21,0x80
0002a2 2757      	EOR  R21,R23
0002a3 f411      	BRNE __REPACK0
0002a4 935f      	PUSH R21
0002a5 c073      	RJMP __ZERORES
                 __REPACK0:
0002a6 3f5f      	CPI  R21,0xFF
0002a7 f031      	BREQ __REPACK1
0002a8 0f66      	LSL  R22
0002a9 0c00      	LSL  R0
0002aa 9557      	ROR  R21
0002ab 9567      	ROR  R22
0002ac 2f75      	MOV  R23,R21
0002ad 9508      	RET
                 __REPACK1:
0002ae 935f      	PUSH R21
0002af 2000      	TST  R0
0002b0 f00a      	BRMI __REPACK2
0002b1 c073      	RJMP __MAXRES
                 __REPACK2:
0002b2 c06c      	RJMP __MINRES
                 
                 __UNPACK:
0002b3 e850      	LDI  R21,0x80
0002b4 2e19      	MOV  R1,R25
0002b5 2215      	AND  R1,R21
0002b6 0f88      	LSL  R24
0002b7 1f99      	ROL  R25
0002b8 2795      	EOR  R25,R21
0002b9 0f55      	LSL  R21
0002ba 9587      	ROR  R24
                 
                 __UNPACK1:
0002bb e850      	LDI  R21,0x80
0002bc 2e07      	MOV  R0,R23
0002bd 2205      	AND  R0,R21
0002be 0f66      	LSL  R22
0002bf 1f77      	ROL  R23
0002c0 2775      	EOR  R23,R21
0002c1 0f55      	LSL  R21
0002c2 9567      	ROR  R22
0002c3 9508      	RET
                 
                 __CFD1U:
0002c4 9468      	SET
0002c5 c001      	RJMP __CFD1U0
                 __CFD1:
0002c6 94e8      	CLT
                 __CFD1U0:
0002c7 935f      	PUSH R21
0002c8 dff2      	RCALL __UNPACK1
0002c9 3870      	CPI  R23,0x80
0002ca f018      	BRLO __CFD10
0002cb 3f7f      	CPI  R23,0xFF
0002cc f408      	BRCC __CFD10
0002cd c04b      	RJMP __ZERORES
                 __CFD10:
0002ce e156      	LDI  R21,22
0002cf 1b57      	SUB  R21,R23
0002d0 f4aa      	BRPL __CFD11
0002d1 9551      	NEG  R21
0002d2 3058      	CPI  R21,8
0002d3 f40e      	BRTC __CFD19
0002d4 3059      	CPI  R21,9
                 __CFD19:
0002d5 f030      	BRLO __CFD17
0002d6 efef      	SER  R30
0002d7 efff      	SER  R31
0002d8 ef6f      	SER  R22
0002d9 e77f      	LDI  R23,0x7F
0002da f977      	BLD  R23,7
0002db c01a      	RJMP __CFD15
                 __CFD17:
0002dc 2777      	CLR  R23
0002dd 2355      	TST  R21
0002de f0b9      	BREQ __CFD15
                 __CFD18:
0002df 0fee      	LSL  R30
0002e0 1fff      	ROL  R31
0002e1 1f66      	ROL  R22
0002e2 1f77      	ROL  R23
0002e3 955a      	DEC  R21
0002e4 f7d1      	BRNE __CFD18
0002e5 c010      	RJMP __CFD15
                 __CFD11:
0002e6 2777      	CLR  R23
                 __CFD12:
0002e7 3058      	CPI  R21,8
0002e8 f028      	BRLO __CFD13
0002e9 2fef      	MOV  R30,R31
0002ea 2ff6      	MOV  R31,R22
0002eb 2f67      	MOV  R22,R23
0002ec 5058      	SUBI R21,8
0002ed cff9      	RJMP __CFD12
                 __CFD13:
0002ee 2355      	TST  R21
0002ef f031      	BREQ __CFD15
                 __CFD14:
0002f0 9576      	LSR  R23
0002f1 9567      	ROR  R22
0002f2 95f7      	ROR  R31
0002f3 95e7      	ROR  R30
0002f4 955a      	DEC  R21
0002f5 f7d1      	BRNE __CFD14
                 __CFD15:
0002f6 2000      	TST  R0
0002f7 f40a      	BRPL __CFD16
0002f8 d080      	RCALL __ANEGD1
                 __CFD16:
0002f9 915f      	POP  R21
0002fa 9508      	RET
                 
                 __CDF1U:
0002fb 9468      	SET
0002fc c001      	RJMP __CDF1U0
                 __CDF1:
0002fd 94e8      	CLT
                 __CDF1U0:
0002fe 9730      	SBIW R30,0
0002ff 4060      	SBCI R22,0
000300 4070      	SBCI R23,0
000301 f0b1      	BREQ __CDF10
000302 2400      	CLR  R0
000303 f026      	BRTS __CDF11
000304 2377      	TST  R23
000305 f412      	BRPL __CDF11
000306 9400      	COM  R0
000307 d071      	RCALL __ANEGD1
                 __CDF11:
000308 2e17      	MOV  R1,R23
000309 e17e      	LDI  R23,30
00030a 2011      	TST  R1
                 __CDF12:
00030b f032      	BRMI __CDF13
00030c 957a      	DEC  R23
00030d 0fee      	LSL  R30
00030e 1fff      	ROL  R31
00030f 1f66      	ROL  R22
000310 1c11      	ROL  R1
000311 cff9      	RJMP __CDF12
                 __CDF13:
000312 2fef      	MOV  R30,R31
000313 2ff6      	MOV  R31,R22
000314 2d61      	MOV  R22,R1
000315 935f      	PUSH R21
000316 df8a      	RCALL __REPACK
000317 915f      	POP  R21
                 __CDF10:
000318 9508      	RET
                 
                 __ZERORES:
000319 27ee      	CLR  R30
00031a 27ff      	CLR  R31
00031b 2766      	CLR  R22
00031c 2777      	CLR  R23
00031d 915f      	POP  R21
00031e 9508      	RET
                 
                 __MINRES:
00031f efef      	SER  R30
000320 efff      	SER  R31
000321 e76f      	LDI  R22,0x7F
000322 ef7f      	SER  R23
000323 915f      	POP  R21
000324 9508      	RET
                 
                 __MAXRES:
000325 efef      	SER  R30
000326 efff      	SER  R31
000327 e76f      	LDI  R22,0x7F
000328 e77f      	LDI  R23,0x7F
000329 915f      	POP  R21
00032a 9508      	RET
                 
                 __MULF12:
00032b 935f      	PUSH R21
00032c df86      	RCALL __UNPACK
00032d 3870      	CPI  R23,0x80
00032e f351      	BREQ __ZERORES
00032f 3890      	CPI  R25,0x80
000330 f341      	BREQ __ZERORES
000331 2401      	EOR  R0,R1
000332 9408      	SEC
000333 1f79      	ADC  R23,R25
000334 f423      	BRVC __MULF124
000335 f31c      	BRLT __ZERORES
                 __MULF125:
000336 2000      	TST  R0
000337 f33a      	BRMI __MINRES
000338 cfec      	RJMP __MAXRES
                 __MULF124:
000339 920f      	PUSH R0
00033a 931f      	PUSH R17
00033b 932f      	PUSH R18
00033c 933f      	PUSH R19
00033d 934f      	PUSH R20
00033e 2711      	CLR  R17
00033f 2722      	CLR  R18
000340 2799      	CLR  R25
000341 9f68      	MUL  R22,R24
000342 01a0      	MOVW R20,R0
000343 9f8f      	MUL  R24,R31
000344 2d30      	MOV  R19,R0
000345 0d41      	ADD  R20,R1
000346 1f59      	ADC  R21,R25
000347 9f6b      	MUL  R22,R27
000348 0d30      	ADD  R19,R0
000349 1d41      	ADC  R20,R1
00034a 1f59      	ADC  R21,R25
00034b 9f8e      	MUL  R24,R30
00034c d027      	RCALL __MULF126
00034d 9fbf      	MUL  R27,R31
00034e d025      	RCALL __MULF126
00034f 9f6a      	MUL  R22,R26
000350 d023      	RCALL __MULF126
000351 9fbe      	MUL  R27,R30
000352 d01d      	RCALL __MULF127
000353 9faf      	MUL  R26,R31
000354 d01b      	RCALL __MULF127
000355 9fae      	MUL  R26,R30
000356 0d11      	ADD  R17,R1
000357 1f29      	ADC  R18,R25
000358 1f39      	ADC  R19,R25
000359 1f49      	ADC  R20,R25
00035a 1f59      	ADC  R21,R25
00035b 2fe3      	MOV  R30,R19
00035c 2ff4      	MOV  R31,R20
00035d 2f65      	MOV  R22,R21
00035e 2f52      	MOV  R21,R18
00035f 914f      	POP  R20
000360 913f      	POP  R19
000361 912f      	POP  R18
000362 911f      	POP  R17
000363 900f      	POP  R0
000364 2366      	TST  R22
000365 f02a      	BRMI __MULF122
000366 0f55      	LSL  R21
000367 1fee      	ROL  R30
000368 1fff      	ROL  R31
000369 1f66      	ROL  R22
00036a c002      	RJMP __MULF123
                 __MULF122:
00036b 9573      	INC  R23
00036c f24b      	BRVS __MULF125
                 __MULF123:
00036d df29      	RCALL __ROUND_REPACK
00036e 915f      	POP  R21
00036f 9508      	RET
                 
                 __MULF127:
000370 0d10      	ADD  R17,R0
000371 1d21      	ADC  R18,R1
000372 1f39      	ADC  R19,R25
000373 c002      	RJMP __MULF128
                 __MULF126:
000374 0d20      	ADD  R18,R0
000375 1d31      	ADC  R19,R1
                 __MULF128:
000376 1f49      	ADC  R20,R25
000377 1f59      	ADC  R21,R25
000378 9508      	RET
                 
                 __ANEGD1:
000379 95f0      	COM  R31
00037a 9560      	COM  R22
00037b 9570      	COM  R23
00037c 95e1      	NEG  R30
00037d 4fff      	SBCI R31,-1
00037e 4f6f      	SBCI R22,-1
00037f 4f7f      	SBCI R23,-1
000380 9508      	RET
                 
                 __LSLW2:
000381 0fee      	LSL  R30
000382 1fff      	ROL  R31
000383 0fee      	LSL  R30
000384 1fff      	ROL  R31
000385 9508      	RET
                 
                 __CWD1:
000386 2f6f      	MOV  R22,R31
000387 0f66      	ADD  R22,R22
000388 0b66      	SBC  R22,R22
000389 2f76      	MOV  R23,R22
00038a 9508      	RET
                 
                 __DIVW21U:
00038b 2400      	CLR  R0
00038c 2411      	CLR  R1
00038d e190      	LDI  R25,16
                 __DIVW21U1:
00038e 0faa      	LSL  R26
00038f 1fbb      	ROL  R27
000390 1c00      	ROL  R0
000391 1c11      	ROL  R1
000392 1a0e      	SUB  R0,R30
000393 0a1f      	SBC  R1,R31
000394 f418      	BRCC __DIVW21U2
000395 0e0e      	ADD  R0,R30
000396 1e1f      	ADC  R1,R31
000397 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000398 60a1      	SBR  R26,1
                 __DIVW21U3:
000399 959a      	DEC  R25
00039a f799      	BRNE __DIVW21U1
00039b 01fd      	MOVW R30,R26
00039c 01d0      	MOVW R26,R0
00039d 9508      	RET
                 
                 __GETD1PF:
00039e 9005      	LPM  R0,Z+
00039f 9015      	LPM  R1,Z+
0003a0 9165      	LPM  R22,Z+
0003a1 9174      	LPM  R23,Z
0003a2 01f0      	MOVW R30,R0
0003a3 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  27 r1 :  18 r2 :   0 r3 :   3 r4 :   2 r5 :   0 r6 :   6 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:  13 r18:   7 r19:   8 r20:   8 r21:  44 r22:  35 r23:  32 
r24:  14 r25:  23 r26:  22 r27:  17 r28:   3 r29:   1 r30: 121 r31:  43 
x  :   4 y  :  23 z  :  12 
Registers used: 23 out of 35 (65.7%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :   3 and   :   2 andi  :   0 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :   9 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   3 
brlt  :   1 brmi  :   4 brne  :  10 brpl  :   4 brsh  :   2 brtc  :   1 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   0 call  :   8 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  15 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :   4 cpc   :   0 cpi   :  10 cpse  :   0 dec   :   5 des   :   0 
eor   :   6 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   2 jmp   :  27 ld    :   7 ldd   :   6 ldi   :  65 
lds   :   0 lpm   :  12 lsl   :  13 lsr   :   1 mov   :  22 movw  :   7 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   0 out   :  25 pop   :  17 push  :  16 rcall :  21 ret   :  21 
reti  :   1 rjmp  :  22 rol   :  16 ror   :   7 sbc   :   2 sbci  :   7 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   5 sbr   :   1 sbrc  :   0 
sbrs  :   1 sec   :   1 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  15 std   :   0 sts   :  12 sub   :   2 subi  :   4 swap  :   0 
tst   :   9 wdr   :   0 
Instructions used: 62 out of 116 (53.4%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000748   1124    740   1864   32768   5.7%
[.dseg] 0x000100 0x0003b6      0    182    182    2048   8.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
